# name: "jib"

# on:
#   push:
#     branches:
#       - master

# jobs:
#   jib:
#     name: "jib"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials from Test account
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'adopt'

#       - name: Cache Gradle packages
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#           restore-keys: |
#             ${{ runner.os }}-gradle-

#       - name: jib with Gradle (app)
#         run: ./gradlew :app:jib
#         env:
#           DOCKER_REPOSITORY_BASE_URL: ${{ secrets.DOCKER_REPOSITORY_BASE_URL }}
#       # - name: jib with Gradle (bot-server)
#       #   run: ./gradlew :bot-server:jib
#       #   env:
#       #     DOCKER_REPOSITORY_BASE_URL: ${{ secrets.DOCKER_REPOSITORY_BASE_URL }}
#       - name: Cleanup Gradle Cache
#         # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
#         # これらのファイルをGitHub Actionsのキャッシュからリストアすると、将来のビルドで問題が生じるかもしれない。
#         run: |
#           rm -f ~/.gradle/caches/modules-2/modules-2.lock
#           rm -f ~/.gradle/caches/modules-2/gc.properties
